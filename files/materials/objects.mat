material openmw_objects_base
{
    diffuse 1.0 1.0 1.0 1.0
    specular 0 0 0 0
    ambient 1.0 1.0 1.0
    emissive 0.0 0.0 0.0
    vertmode 0
    diffuseMap black.png
    normalMap
    emissiveMap
    use_emissive_map false
    emissiveMapUVSet 0

    is_transparent false // real transparency, alpha rejection doesn't count here
    scene_blend default
    depth_write default
    alpha_rejection default
    transparent_sorting default

    pass
    {
        vertex_program openmw_objects_vertex
        fragment_program openmw_objects_fragment

        shader_properties
        {
            vertexcolor_mode $vertmode
            is_transparent $is_transparent
            normalMap $normalMap
            emissiveMapUVSet $emissiveMapUVSet
            emissiveMap $emissiveMap
        }

        diffuse $diffuse
        specular $specular
        ambient $ambient
        emissive $emissive
        scene_blend $scene_blend
        alpha_rejection $alpha_rejection
        depth_write $depth_write
        transparent_sorting $transparent_sorting

        texture_unit diffuseMap
        {
            direct_texture $diffuseMap
            create_in_ffp true
            tex_coord_set $emissiveMapUVSet
        }

        texture_unit normalMap
        {
            direct_texture $normalMap
        }

        texture_unit emissiveMap
        {
            create_in_ffp $use_emissive_map
            colour_op add
            direct_texture $emissiveMap
            tex_coord_set $emissiveMapUVSet
        }
      
        texture_unit shadowMap0
        {
            content_type shadow
            tex_address_mode clamp
            filtering none
        }
        texture_unit shadowMap1
        {
            content_type shadow
            tex_address_mode clamp
            filtering none
        }
        texture_unit shadowMap2
        {
            content_type shadow
            tex_address_mode clamp
            filtering none
        }
    }
}
